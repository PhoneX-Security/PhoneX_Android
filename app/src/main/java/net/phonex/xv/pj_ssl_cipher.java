/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.phonex.xv;

public enum pj_ssl_cipher {
  PJ_TLS_UNKNOWN_CIPHER(XviJNI.PJ_TLS_UNKNOWN_CIPHER_get()),
  PJ_TLS_NULL_WITH_NULL_NULL(XviJNI.PJ_TLS_NULL_WITH_NULL_NULL_get()),
  PJ_TLS_RSA_WITH_NULL_MD5(XviJNI.PJ_TLS_RSA_WITH_NULL_MD5_get()),
  PJ_TLS_RSA_WITH_NULL_SHA(XviJNI.PJ_TLS_RSA_WITH_NULL_SHA_get()),
  PJ_TLS_RSA_WITH_NULL_SHA256(XviJNI.PJ_TLS_RSA_WITH_NULL_SHA256_get()),
  PJ_TLS_RSA_WITH_RC4_128_MD5(XviJNI.PJ_TLS_RSA_WITH_RC4_128_MD5_get()),
  PJ_TLS_RSA_WITH_RC4_128_SHA(XviJNI.PJ_TLS_RSA_WITH_RC4_128_SHA_get()),
  PJ_TLS_RSA_WITH_3DES_EDE_CBC_SHA(XviJNI.PJ_TLS_RSA_WITH_3DES_EDE_CBC_SHA_get()),
  PJ_TLS_RSA_WITH_AES_128_CBC_SHA(XviJNI.PJ_TLS_RSA_WITH_AES_128_CBC_SHA_get()),
  PJ_TLS_RSA_WITH_AES_256_CBC_SHA(XviJNI.PJ_TLS_RSA_WITH_AES_256_CBC_SHA_get()),
  PJ_TLS_RSA_WITH_AES_128_CBC_SHA256(XviJNI.PJ_TLS_RSA_WITH_AES_128_CBC_SHA256_get()),
  PJ_TLS_RSA_WITH_AES_256_CBC_SHA256(XviJNI.PJ_TLS_RSA_WITH_AES_256_CBC_SHA256_get()),
  PJ_TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA(XviJNI.PJ_TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA_get()),
  PJ_TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA(XviJNI.PJ_TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA_get()),
  PJ_TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA(XviJNI.PJ_TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA_get()),
  PJ_TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA(XviJNI.PJ_TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA_get()),
  PJ_TLS_DH_DSS_WITH_AES_128_CBC_SHA(XviJNI.PJ_TLS_DH_DSS_WITH_AES_128_CBC_SHA_get()),
  PJ_TLS_DH_RSA_WITH_AES_128_CBC_SHA(XviJNI.PJ_TLS_DH_RSA_WITH_AES_128_CBC_SHA_get()),
  PJ_TLS_DHE_DSS_WITH_AES_128_CBC_SHA(XviJNI.PJ_TLS_DHE_DSS_WITH_AES_128_CBC_SHA_get()),
  PJ_TLS_DHE_RSA_WITH_AES_128_CBC_SHA(XviJNI.PJ_TLS_DHE_RSA_WITH_AES_128_CBC_SHA_get()),
  PJ_TLS_DH_DSS_WITH_AES_256_CBC_SHA(XviJNI.PJ_TLS_DH_DSS_WITH_AES_256_CBC_SHA_get()),
  PJ_TLS_DH_RSA_WITH_AES_256_CBC_SHA(XviJNI.PJ_TLS_DH_RSA_WITH_AES_256_CBC_SHA_get()),
  PJ_TLS_DHE_DSS_WITH_AES_256_CBC_SHA(XviJNI.PJ_TLS_DHE_DSS_WITH_AES_256_CBC_SHA_get()),
  PJ_TLS_DHE_RSA_WITH_AES_256_CBC_SHA(XviJNI.PJ_TLS_DHE_RSA_WITH_AES_256_CBC_SHA_get()),
  PJ_TLS_DH_DSS_WITH_AES_128_CBC_SHA256(XviJNI.PJ_TLS_DH_DSS_WITH_AES_128_CBC_SHA256_get()),
  PJ_TLS_DH_RSA_WITH_AES_128_CBC_SHA256(XviJNI.PJ_TLS_DH_RSA_WITH_AES_128_CBC_SHA256_get()),
  PJ_TLS_DHE_DSS_WITH_AES_128_CBC_SHA256(XviJNI.PJ_TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_get()),
  PJ_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256(XviJNI.PJ_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_get()),
  PJ_TLS_DH_DSS_WITH_AES_256_CBC_SHA256(XviJNI.PJ_TLS_DH_DSS_WITH_AES_256_CBC_SHA256_get()),
  PJ_TLS_DH_RSA_WITH_AES_256_CBC_SHA256(XviJNI.PJ_TLS_DH_RSA_WITH_AES_256_CBC_SHA256_get()),
  PJ_TLS_DHE_DSS_WITH_AES_256_CBC_SHA256(XviJNI.PJ_TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_get()),
  PJ_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256(XviJNI.PJ_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_get()),
  PJ_TLS_DH_anon_WITH_RC4_128_MD5(XviJNI.PJ_TLS_DH_anon_WITH_RC4_128_MD5_get()),
  PJ_TLS_DH_anon_WITH_3DES_EDE_CBC_SHA(XviJNI.PJ_TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_get()),
  PJ_TLS_DH_anon_WITH_AES_128_CBC_SHA(XviJNI.PJ_TLS_DH_anon_WITH_AES_128_CBC_SHA_get()),
  PJ_TLS_DH_anon_WITH_AES_256_CBC_SHA(XviJNI.PJ_TLS_DH_anon_WITH_AES_256_CBC_SHA_get()),
  PJ_TLS_DH_anon_WITH_AES_128_CBC_SHA256(XviJNI.PJ_TLS_DH_anon_WITH_AES_128_CBC_SHA256_get()),
  PJ_TLS_DH_anon_WITH_AES_256_CBC_SHA256(XviJNI.PJ_TLS_DH_anon_WITH_AES_256_CBC_SHA256_get()),
  PJ_TLS_RSA_EXPORT_WITH_RC4_40_MD5(XviJNI.PJ_TLS_RSA_EXPORT_WITH_RC4_40_MD5_get()),
  PJ_TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5(XviJNI.PJ_TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5_get()),
  PJ_TLS_RSA_WITH_IDEA_CBC_SHA(XviJNI.PJ_TLS_RSA_WITH_IDEA_CBC_SHA_get()),
  PJ_TLS_RSA_EXPORT_WITH_DES40_CBC_SHA(XviJNI.PJ_TLS_RSA_EXPORT_WITH_DES40_CBC_SHA_get()),
  PJ_TLS_RSA_WITH_DES_CBC_SHA(XviJNI.PJ_TLS_RSA_WITH_DES_CBC_SHA_get()),
  PJ_TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA(XviJNI.PJ_TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA_get()),
  PJ_TLS_DH_DSS_WITH_DES_CBC_SHA(XviJNI.PJ_TLS_DH_DSS_WITH_DES_CBC_SHA_get()),
  PJ_TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA(XviJNI.PJ_TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA_get()),
  PJ_TLS_DH_RSA_WITH_DES_CBC_SHA(XviJNI.PJ_TLS_DH_RSA_WITH_DES_CBC_SHA_get()),
  PJ_TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA(XviJNI.PJ_TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA_get()),
  PJ_TLS_DHE_DSS_WITH_DES_CBC_SHA(XviJNI.PJ_TLS_DHE_DSS_WITH_DES_CBC_SHA_get()),
  PJ_TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA(XviJNI.PJ_TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA_get()),
  PJ_TLS_DHE_RSA_WITH_DES_CBC_SHA(XviJNI.PJ_TLS_DHE_RSA_WITH_DES_CBC_SHA_get()),
  PJ_TLS_DH_anon_EXPORT_WITH_RC4_40_MD5(XviJNI.PJ_TLS_DH_anon_EXPORT_WITH_RC4_40_MD5_get()),
  PJ_TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA(XviJNI.PJ_TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA_get()),
  PJ_TLS_DH_anon_WITH_DES_CBC_SHA(XviJNI.PJ_TLS_DH_anon_WITH_DES_CBC_SHA_get()),
  PJ_SSL_FORTEZZA_KEA_WITH_NULL_SHA(XviJNI.PJ_SSL_FORTEZZA_KEA_WITH_NULL_SHA_get()),
  PJ_SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA(XviJNI.PJ_SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA_get()),
  PJ_SSL_FORTEZZA_KEA_WITH_RC4_128_SHA(XviJNI.PJ_SSL_FORTEZZA_KEA_WITH_RC4_128_SHA_get()),
  PJ_SSL_CK_RC4_128_WITH_MD5(XviJNI.PJ_SSL_CK_RC4_128_WITH_MD5_get()),
  PJ_SSL_CK_RC4_128_EXPORT40_WITH_MD5(XviJNI.PJ_SSL_CK_RC4_128_EXPORT40_WITH_MD5_get()),
  PJ_SSL_CK_RC2_128_CBC_WITH_MD5(XviJNI.PJ_SSL_CK_RC2_128_CBC_WITH_MD5_get()),
  PJ_SSL_CK_RC2_128_CBC_EXPORT40_WITH_MD5(XviJNI.PJ_SSL_CK_RC2_128_CBC_EXPORT40_WITH_MD5_get()),
  PJ_SSL_CK_IDEA_128_CBC_WITH_MD5(XviJNI.PJ_SSL_CK_IDEA_128_CBC_WITH_MD5_get()),
  PJ_SSL_CK_DES_64_CBC_WITH_MD5(XviJNI.PJ_SSL_CK_DES_64_CBC_WITH_MD5_get()),
  PJ_SSL_CK_DES_192_EDE3_CBC_WITH_MD5(XviJNI.PJ_SSL_CK_DES_192_EDE3_CBC_WITH_MD5_get());

  public final int swigValue() {
    return swigValue;
  }

  public static pj_ssl_cipher swigToEnum(int swigValue) {
    pj_ssl_cipher[] swigValues = pj_ssl_cipher.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (pj_ssl_cipher swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + pj_ssl_cipher.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private pj_ssl_cipher() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private pj_ssl_cipher(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private pj_ssl_cipher(pj_ssl_cipher swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

